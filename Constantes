//DEPENDENCIAS
    public static boolean par(int x) {
        return x % 2 == 0;
    }

    public static int frecuencia(int a[], int x) {
        int c = 0;
        for (int i = 0; i < a.length; i++) {
            if (a[i] == x) {
                c = c + 1;
            }
        }
        return c;
    }

    //Tam Const
    //1
    public static boolean diferentes(int a[]) {
        for (int i = 0; i < a.length; i++) {
            for (int j = i + 1; j < a.length; j++) {
                if (a[i] == a[j]) {
                    return false;
                }
            }
        }
        return true;
    }

    //2
    public static int mayor(int a[]) {
        int may = a[0];
        for (int i = 1; i < a.length; i++) {
            if (may < a[i]) {
                may = a[i];
            }
        }
        return may;
    }

    //3
    public static boolean pares(int a[]) {
        for (int i = 0; i < a.length; i++) {
            if (!par(a[i])) {
                return false;
            }
        }
        return true;
    }

    //4
    public static int cantPares(int a[]) {
        int c = 0;
        for (int i = 0; i < a.length; i++) {
            if (par(a[i])) {
                c = c + 1;
            }
        }
        return c;
    }

    //5
    public static boolean poker(int a[]) {
        for (int i = 0; i < a.length; i++) {
            if (frecuencia(a, a[i]) == a.length - 1) {
                return true;
            }
        }
        return false;
    }


}
